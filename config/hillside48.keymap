/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define HOST_OS 2

#include "../zmk-nodefree-config-main/helper.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define MAC_Q_L  3
#define SYM_L    4
#define NUM_L    5
#define ADJ_L    6
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)

ZMK_UNICODE_SINGLE(em_dash, N0, N1, N5, N1)

/{

    behaviors {
        open_parenbrackcurl: open_parenbrackcurl {
            compatible = "zmk,behavior-tap-dance";
            label = "OPEN_PARENBRACKCURL";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp LEFT_BRACKET>,
                <&kp LEFT_BRACE>;
        };

        close_parenbrackcurl: close_parenbrackcurl {
            compatible = "zmk,behavior-tap-dance";
            label = "CLOSE_PARENBRACKCURL";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACKET>,
                <&kp RIGHT_BRACE>;
        };

        atexclaimhash: atexclaimhash {
            compatible = "zmk,behavior-tap-dance";
            label = "ATEXCLAIMHASH";
            #binding-cells = <0>;
            bindings = <&kp EXCLAMATION>, <&kp AT>, <&kp HASH>;
        };

        DollarPercentAmpersand: DollarPercentAmpersand {
            compatible = "zmk,behavior-tap-dance";
            label = "DOLLARPERCENTAMPERSAND";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR>, <&kp PERCENT>, <&kp AMPERSAND>;
        };

        Unduredu: Unduredu {
            compatible = "zmk,behavior-tap-dance";
            label = "UNDUREDU";
            #binding-cells = <0>;
            bindings = <&kp C_AC_UNDO>, <&kp C_AC_REDO>;
        };

        cmdshift: cmdshift {
            compatible = "zmk,behavior-tap-dance";
            label = "CMDSHIFT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND>, <&kp LG(LEFT_SHIFT)>;
        };

        ctrl_shift: ctrl_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRL_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL>, <&kp LC(LEFT_SHIFT)>;
        };

        msnctrl_scrnsht_tskmgr: msnctrl_scrnsht_tskmgr {
            compatible = "zmk,behavior-tap-dance";
            label = "MSNCTRL_SCRNSHT_TSKMGR";
            #binding-cells = <0>;
            bindings =
                <&kp LG(UP_ARROW)>,
                <&kp RG(RS(NUMBER_2))>,
                <&kp LC(LS(ESCAPE))>;
        };

        dash_long_under: dash_long_under {
            compatible = "zmk,behavior-tap-dance";
            label = "DASH_LONG_UNDER";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&em_dash>, <&kp UNDERSCORE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Equals {
            bindings = <&kp EQUAL>;
            key-positions = <20 15>;
        };

        OutlookTaskOnenote {
            bindings = <&kp LC(RS(N5))>;
            key-positions = <3 8>;
        };

        togglenumnav {
            bindings = <&tog 1>;
            key-positions = <41 44>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <0 11>;
        };

        mute {
            bindings = <&kp K_MUTE>;
            key-positions = <11 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_default_layer {
            /* MAC_QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | SHIFT |   Z   |   X   |   C   |   V   |   B   | ALT   |-------------------|  ESC  |   N   |   M   |   ,   |   .   |   /   | SHIFT |
 * ----------------| CAPS  |-------|  CTRL |  CMD  | SPACE |  Sym  |---|  Num  | SPACE |  ALT  |   '   |-------|Play/P |----------------
 */

            bindings = <
&kp ESC    &kp Q  &kp W      &kp E  &kp R        &kp T                                                                 &kp Y      &kp U          &kp I      &kp O                    &kp P      &kp BSPC
&kp TAB    &kp A  &kp S      &kp D  &kp F        &kp G                                                                 &kp H      &kp J          &kp K      &kp L                    &kp SEMI   &kp SINGLE_QUOTE
&kp LSHFT  &kp Z  &kp X      &kp C  &kp V        &kp B      &open_parenbrackcurl                &close_parenbrackcurl  &kp N      &kp M          &kp COMMA  &kp DOT                  &kp SLASH  &kp RIGHT_SHIFT
                  &cmdshift         &ctrl_shift  &kp ENTER  &mo 1                 &mo 2  &mo 2  &mo 1                  &kp SPACE  &kp RIGHT_ALT             &msnctrl_scrnsht_tskmgr
            >;
        };

        num_nav {
            /* SYM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | HOME  |   !   |   @   |   #   |   $   |   %   |-----------------------------------|   ^   |   &   |   *   |   (   |   )   | BSPC  |
 * | END   |  GUI  |  Alt  | Ctrl  | Shift | Pg Up |-----------------------------------|   -   |   =   |   [   |   ]   |   \   | ENTER |
 * | Shift |  UnDo |  Cut  | Copy  | Paste | Pg Dn |OsAltGr|-------------------| MENU  |   _   |   +   |   {   |   }   |   |   | SHIFT |
 * ----------------|       |-------|       |       |       |       |---| ADJ_L |       |       |       |-------| CTRL  |----------------
 */

            bindings = <
&kp GRAVE  &trans  &kp HOME  &kp UP_ARROW    &kp END          &kp PAGE_UP                                    &kp PLUS         &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &dash_long_under     &trans
&trans     &none   &kp LEFT  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN                                  &kp STAR         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_DIVIDE  &trans
&trans     &none   &none     &none           &none            &none          &trans                  &trans  &kp DOLLAR       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COLON      &trans
                   &trans                    &trans           &trans         &mo 2   &trans  &trans  &mo 2   &kp KP_NUMBER_0  &trans                      &kp DOT
            >;
        };

        Sys_Sym {
            /* NUM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | F1    |  F2   | Home  |  Up   |  End  |  F9   |-----------------------------------|   /   |   7   |   8   |   9   |   -   | BSPC  |
 * | F3    |  F4   | Left  | Down  | Right |  F10  |-----------------------------------|   *   |   4   |   5   |   6   |   +   | ENTER |
 * | Shift |  F5   |  F6   |  F7   |  F8   |  F11  |  F12  |-------------------| MUTE  |   ,   |   1   |   2   |   3   |   =   | DELETE|
 * ----------------|       |-------|       |       |       | ADJ_L |---|       |       |   0   |       |-------|Play/P |----------------
 */

            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR  &kp PERCENT     &kp CARET                                          &kp AMPERSAND    &kp K_PREVIOUS     &kp K_PLAY_PAUSE  &kp K_NEXT    &kp C_VOL_DN    &kp C_VOLUME_UP
&kp F1           &kp F2        &kp F3        &kp F4      &kp F5          &kp F6                                             &kp F7           &kp F8             &kp F9            &kp F10       &kp F11         &kp F12
&bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &bt BT_CLR_ALL  &ext_power EP_TOG  &trans                  &trans  &rgb_ug RGB_TOG  &ext_power EP_OFF  &out OUT_USB      &out OUT_BLE  &rgb_ug RGB_ON  &none
                               &trans                    &trans          &trans             &trans  &trans  &trans  &trans  &none            &trans                               &none
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
            >;
        };
    };
};
