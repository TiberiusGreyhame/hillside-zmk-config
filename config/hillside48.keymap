/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define MAC_Q_L  3
#define SYM_L    4
#define NUM_L    5
#define ADJ_L    6
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)

/ {
    behaviors {
        open_parenbrackcurl: open_parenbrackcurl {
            compatible = "zmk,behavior-tap-dance";
            label = "OPEN_PARENBRACKCURL";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp LEFT_BRACKET>,
                <&kp LEFT_BRACE>;
        };

        close_parenbrackcurl: close_parenbrackcurl {
            compatible = "zmk,behavior-tap-dance";
            label = "CLOSE_PARENBRACKCURL";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACKET>,
                <&kp RIGHT_BRACE>;
        };

        atexclaimhash: atexclaimhash {
            compatible = "zmk,behavior-tap-dance";
            label = "ATEXCLAIMHASH";
            #binding-cells = <0>;
            bindings = <&kp EXCLAMATION>, <&kp AT>, <&kp HASH>;
        };

        DollarPercentAmpersand: DollarPercentAmpersand {
            compatible = "zmk,behavior-tap-dance";
            label = "DOLLARPERCENTAMPERSAND";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR>, <&kp PERCENT>, <&kp AMPERSAND>;
        };

        Unduredu: Unduredu {
            compatible = "zmk,behavior-tap-dance";
            label = "UNDUREDU";
            #binding-cells = <0>;
            bindings = <&kp C_AC_UNDO>, <&kp C_AC_REDO>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_default_layer {
            /* MAC_QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | SHIFT |   Z   |   X   |   C   |   V   |   B   | ALT   |-------------------|  ESC  |   N   |   M   |   ,   |   .   |   /   | SHIFT |
 * ----------------| CAPS  |-------|  CTRL |  CMD  | SPACE |  Sym  |---|  Num  | SPACE |  ALT  |   '   |-------|Play/P |----------------
 */

            bindings = <
&kp ESC    &kp Q  &kp W             &kp E  &kp R         &kp T                                                                 &kp Y      &kp U          &kp I      &kp O         &kp P      &kp BSPC
&kp CAPS   &kp A  &kp S             &kp D  &kp F         &kp G                                                                 &kp H      &kp J          &kp K      &kp L         &kp SEMI   &kp SINGLE_QUOTE
&kp LSHFT  &kp Z  &kp X             &kp C  &kp V         &kp B      &open_parenbrackcurl                &close_parenbrackcurl  &kp N      &kp M          &kp COMMA  &kp DOT       &kp SLASH  &kp RIGHT_SHIFT
                  &kp LEFT_CONTROL         &kp LEFT_GUI  &kp ENTER  &Unduredu             &to 1  &to 0  &kp TAB                &kp SPACE  &kp RIGHT_ALT             &kp KP_EQUAL
            >;
        };

        num_nav {
            /* SYM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | HOME  |   !   |   @   |   #   |   $   |   %   |-----------------------------------|   ^   |   &   |   *   |   (   |   )   | BSPC  |
 * | END   |  GUI  |  Alt  | Ctrl  | Shift | Pg Up |-----------------------------------|   -   |   =   |   [   |   ]   |   \   | ENTER |
 * | Shift |  UnDo |  Cut  | Copy  | Paste | Pg Dn |OsAltGr|-------------------| MENU  |   _   |   +   |   {   |   }   |   |   | SHIFT |
 * ----------------|       |-------|       |       |       |       |---| ADJ_L |       |       |       |-------| CTRL  |----------------
 */

            bindings = <
&trans  &none  &kp HOME        &kp UP_ARROW    &kp END          &kp PAGE_UP                                   &kp PLUS         &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS         &trans
&none   &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN                                 &kp STAR         &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_DIVIDE     &trans
&trans  &none  &none           &none           &none            &none          &trans                 &trans  &kp LESS_THAN    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp GREATER_THAN  &trans
               &trans                          &trans           &trans         &trans  &to 2  &trans  &trans  &kp KP_NUMBER_0  &trans                            &kp DOT
            >;
        };

        num_layer {
            /* NUM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | F1    |  F2   | Home  |  Up   |  End  |  F9   |-----------------------------------|   /   |   7   |   8   |   9   |   -   | BSPC  |
 * | F3    |  F4   | Left  | Down  | Right |  F10  |-----------------------------------|   *   |   4   |   5   |   6   |   +   | ENTER |
 * | Shift |  F5   |  F6   |  F7   |  F8   |  F11  |  F12  |-------------------| MUTE  |   ,   |   1   |   2   |   3   |   =   | DELETE|
 * ----------------|       |-------|       |       |       | ADJ_L |---|       |       |   0   |       |-------|Play/P |----------------
 */

            bindings = <
&none   &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp CARET                                                     &kp NUMBER_6  &kp N7  &kp N8  &kp N9             &kp N0   &trans
&kp F1  &kp F2           &kp F3  &kp F4    &kp F5      &kp F6                                                        &kp F7        &kp F8  &kp F9  &kp F10            &kp F11  &kp F12
&none   &none            &none   &none     &none       &none      &kp C_VOLUME_UP                 &kp C_VOLUME_DOWN  &none         &none   &none   &none              &none    &none
                         &trans            &trans      &trans     &trans           &to 1  &trans  &trans             &none         &trans          &kp LG(LS(KP_N4))
            >;
        };

        adj_layer {
            /* ADJUST
 * ----------------------------------------------------------------------------------------------------------------------------------------
 * |MAC_QWERTY| QWERTY| DVORAK| COLEMK| NUM   |       |-----------------------------------|       |Prt Scr|       | EP_OFF| EP_ON |       |
 * |          | BT 0  | BT 1  | BT 2  | BT 3  | BT 4  |-----------------------------------|       |       |       |       |       |       |
 * |   BOOTL  | RESET |       |OUT_USB|OUT_BLE|       |BT CLR |-------------------|       |       |       |       |       |       | SHIFT |
 * -------------------|       |-------|       |       |       |       |---|       |       |       |       |-------| CTRL  |----------------
 */

            bindings = <
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                          &none   &none   &none  &none  &none  &bt BT_CLR_ALL
&none        &none         &none         &none         &none         &none                                                 &none   &none   &none  &none  &none  &none
&bootloader  &sys_reset    &none         &none         &none         &none         &bt BT_NXT                  &bt BT_PRV  &none   &none   &none  &none  &none  &trans
                           &trans                      &trans        &trans        &trans      &trans  &trans  &trans      &trans  &trans         &none
            >;
        };
    };
};
